<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 某春雨的后花园</title>
        <link>https://ichunyu.github.io/posts/</link>
        <description>所有文章 | 某春雨的后花园</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>chunyu2018@foxmail.com (大春雨)</managingEditor>
            <webMaster>chunyu2018@foxmail.com (大春雨)</webMaster><lastBuildDate>Sun, 26 Dec 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://ichunyu.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Arch Linux 系统安装</title>
    <link>https://ichunyu.github.io/installarch/</link>
    <pubDate>Sun, 26 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>大春雨</name>
    </author><guid>https://ichunyu.github.io/installarch/</guid>
    <description><![CDATA[<p>最近有兴趣折腾了一下 Arch Linux，并在虚拟机中成功安装。将安装步骤记录于此，下一次就真机实战。</p>]]></description>
</item><item>
    <title>Windows 系统安装</title>
    <link>https://ichunyu.github.io/installwindows/</link>
    <pubDate>Fri, 17 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>大春雨</name>
    </author><guid>https://ichunyu.github.io/installwindows/</guid>
    <description><![CDATA[<p>最近女朋友的电脑被她玩挂了，我决定写一篇文章教她如何重装系统。</p>]]></description>
</item><item>
    <title>傅立叶变换与频域分析简介</title>
    <link>https://ichunyu.github.io/introspectrum/</link>
    <pubDate>Thu, 02 Dec 2021 14:36:16 &#43;0800</pubDate><author>
        <name>大春雨</name>
    </author><guid>https://ichunyu.github.io/introspectrum/</guid>
    <description><![CDATA[<p>广义的傅立叶变换是指时域信号在频域内的分解，具体包括周期信号的傅立叶级数、非周期信号的傅立叶变换、离散信号的离散时间傅立叶变换和离散傅立叶变换。本文介绍这几种变换，旨在梳理其中的关系并简要讨论信号离散化带来的的问题。</p>]]></description>
</item><item>
    <title>模型预测控制简介</title>
    <link>https://ichunyu.github.io/modelpreditivecontrol/</link>
    <pubDate>Fri, 26 Nov 2021 21:39:17 &#43;0800</pubDate><author>
        <name>大春雨</name>
    </author><guid>https://ichunyu.github.io/modelpreditivecontrol/</guid>
    <description><![CDATA[<p>最近在 DR_CAN 的视频中学到了模型预测控制，于是打算写篇博客记记笔记，权当公式推导的练习。</p>]]></description>
</item><item>
    <title>卡尔曼滤波简介</title>
    <link>https://ichunyu.github.io/kalmanfilter/</link>
    <pubDate>Thu, 19 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>大春雨</name>
    </author><guid>https://ichunyu.github.io/kalmanfilter/</guid>
    <description><![CDATA[<p>卡尔曼滤波是一种最优滤波器，通过对系统的输入和输出进行数据融合来获得状态的最优估计。本文介绍卡尔曼滤波的基本原理并推导其核心公式。</p>]]></description>
</item><item>
    <title>Vim 简介</title>
    <link>https://ichunyu.github.io/vim/</link>
    <pubDate>Tue, 10 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>大春雨</name>
    </author><guid>https://ichunyu.github.io/vim/</guid>
    <description><![CDATA[<p>最近有兴趣折腾了一下 Vim，不免对这个上古神器的强大感到震撼。这篇文章简要记录下基本操作，只能说是冰山一角。</p>]]></description>
</item><item>
    <title>产生任意谱密度的噪声</title>
    <link>https://ichunyu.github.io/gennoise/</link>
    <pubDate>Tue, 03 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>大春雨</name>
    </author><guid>https://ichunyu.github.io/gennoise/</guid>
    <description><![CDATA[<p>在系统仿真中通常使用噪声滤波器对白噪声进行塑形，从而验证色噪声对系统性能的影响。然而通常滤波器的阶次是整数，难以实现诸如 $1/f^\alpha , (0&lt; \alpha &lt;2)$ 分数阶次的粉红噪声。为此，我们可以在仿真之前利用傅立叶逆变换把噪声造出来，然后引入模型进行仿真。本文将介绍构造噪声的方法。</p>]]></description>
</item><item>
    <title>日常小技巧</title>
    <link>https://ichunyu.github.io/tricks/</link>
    <pubDate>Sat, 10 Jul 2021 00:00:00 &#43;0000</pubDate><author>
        <name>大春雨</name>
    </author><guid>https://ichunyu.github.io/tricks/</guid>
    <description><![CDATA[<p>一些不常用但是可能有用的小技巧，或许会不定时更新吧。</p>]]></description>
</item><item>
    <title>抗饱和积分</title>
    <link>https://ichunyu.github.io/integratorantiwindup/</link>
    <pubDate>Sat, 19 Jun 2021 00:00:00 &#43;0000</pubDate><author>
        <name>大春雨</name>
    </author><guid>https://ichunyu.github.io/integratorantiwindup/</guid>
    <description><![CDATA[<p>对于实际的系统，控制器的输出应当受到幅度限制，以避免超出执行机的量程。然而，在具有积分的控制器中如果仅对输出进行限幅，将会引起所谓的退饱和现象，使控制器的性能变差甚至导致系统不稳定。这回我们来谈谈抗饱和积分器。</p>]]></description>
</item><item>
    <title>信号的滤波</title>
    <link>https://ichunyu.github.io/filterdesign/</link>
    <pubDate>Wed, 02 Jun 2021 00:00:00 &#43;0000</pubDate><author>
        <name>大春雨</name>
    </author><guid>https://ichunyu.github.io/filterdesign/</guid>
    <description><![CDATA[<p>线性系统对不同频率信号的幅度和相位有不同的响应，据此可以实现信号在频域上的分离，这就是所谓的滤波，相应的系统称为滤波器。无论是 MATLAB 还是 Python 都具有完善的工具包对常用线性滤波器进行设计，本文简要介绍这些函数及其用法。</p>]]></description>
</item></channel>
</rss>
